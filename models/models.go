// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"time"
)

type HabitOrHabitLog interface {
	IsHabitOrHabitLog()
}

type AuthorizeUserRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type CreateUserRequest struct {
	Username  string `json:"username"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Authority int    `json:"authority"`
}

type DeleteHabitLogRequest struct {
	ID string `json:"id"`
}

type DeleteHabitRequest struct {
	ID string `json:"id"`
}

type DeleteUserRequest struct {
	ID string `json:"id"`
}

type GetHabitByIDRequest struct {
	ID string `json:"id"`
}

type GetHabitLogByIDRequest struct {
	ID string `json:"id"`
}

type GetOneUserRequest struct {
	ID string `json:"id"`
}

type Habit struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (Habit) IsHabitOrHabitLog() {}

type HabitLog struct {
	ID   string `json:"id"`
	Date string `json:"date"`
	Type string `json:"type"`
	Note string `json:"note"`
}

func (HabitLog) IsHabitOrHabitLog() {}

type HabitLogResponse struct {
	Message  string      `json:"message"`
	Status   int         `json:"status"`
	Data     *HabitLog   `json:"data"`
	DataList []*HabitLog `json:"dataList"`
}

type HabitResponse struct {
	Message  string   `json:"message"`
	Status   int      `json:"status"`
	Data     *Habit   `json:"data"`
	DataList []*Habit `json:"dataList"`
}

type InitHabitRequest struct {
	Name string `json:"name"`
}

type Jwt struct {
	Token string `json:"token"`
}

type JWTResponse struct {
	Message string `json:"message"`
	Status  int    `json:"status"`
	Jwt     *Jwt   `json:"jwt"`
	Jwts    []*Jwt `json:"jwts"`
}

type LogHabitRequest struct {
	Type string `json:"type"`
	Note string `json:"note"`
	Date string `json:"date"`
}

type PingResponse struct {
	Status int `json:"status"`
}

type UpdateHabitLogRequest struct {
	ID   string `json:"id"`
	Type string `json:"type"`
	Note string `json:"note"`
	Date string `json:"date"`
}

type UpdateHabitRequest struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type UpdateUserRequest struct {
	Username  string `json:"username"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Authority int    `json:"authority"`
}

type User struct {
	ID        string    `json:"id"`
	CreatedAt time.Time `json:"createdAt"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	Password  string    `json:"password"`
	Authority int       `json:"authority"`
}

type UserResponse struct {
	Message  string  `json:"message"`
	Status   int     `json:"status"`
	Data     *User   `json:"data"`
	DataList []*User `json:"dataList"`
}
